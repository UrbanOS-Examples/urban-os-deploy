global:
  aws:
    region: us-west-2
  redis:
    host: redis.external-services
    password: ""
  ingress:
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"
      alb.ingress.kubernetes.io/scheme: "internal"
      alb.ingress.kubernetes.io/subnets: ""
      alb.ingress.kubernetes.io/security-groups: ""
      alb.ingress.kubernetes.io/certificate-arn: ""
      alb.ingress.kubernetes.io/tags: scos.delete.on.teardown=true
      alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=4000
      alb.ingress.kubernetes.io/actions.redirect: '{"Type": "redirect", "RedirectConfig":{"Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/wafv2-acl-arn: ""
    dnsZone: localhost
    rootDnsZone: localhost

andi:
  postgres:
    port: "5432"
    dbname: "andi"
    user: "andi"
  enabled: true
  ingress:
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
  auth:
    jwt_issuer: "https://smartcolumbusos-demo.auth0.com/"
    auth0_domain: "smartcolumbusos-demo.auth0.com"
    auth0_client_id: "REDACTED"
discovery-api:
  postgres:
    port: "5432"
    dbname: "discovery"
    user: "discovery"
  enabled: true
  ingress:
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
discovery-ui:
  enabled: true
odo:
  enabled: true
raptor:
  auth:
    auth0_client_id: "REDACTED"
reaper:
  enabled: true
discovery-streams:
  enabled: true
  ingress:
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /socket/healthcheck
forklift:
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi
kubernetes-data-platform:
  presto:
    ingress:
      enable: true
      annotations:
        alb.ingress.kubernetes.io/healthcheck-path: /v1/cluster

monitoring:
  enabled: true
  grafanaIngress:
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /api/health

  prometheusIngress:
    annotations:
      alb.ingress.kubernetes.io/healthcheck-path: /-/healthy

  grafana:
    adminPassword: admin
    dashboards:
      default:
        ceav-dashboard:
          gnetId: 14812
          revision: 1
          datasource: Prometheus
        cota-streaming-metrics:
          gnetId: 14807
          revision: 1
          datasource: Prometheus

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://monitoring-prometheus-server
            access: proxy
            isDefault: true
          - name: CloudWatch
            type: cloudwatch
            isDefault: false
            access: proxy
            jsonData:
              authType: credentials
              defaultRegion: "us-west-2"

kafka:
  tolerations:
    - key: scos.run.kafka
      operator: Equal
      value: "true"
      effect: NoExecute

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: scos.run.kafka
                operator: In
                values:
                  - "true"
